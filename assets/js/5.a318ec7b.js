(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{168:function(t,a,r){t.exports=r.p+"assets/img/4787d6dc-f780-4742-a971-f42f98d578b2.c40843fb.jpg"},196:function(t,a,r){"use strict";r.r(a);var e=[function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("div",{staticClass:"content"},[e("h2",{attrs:{id:"封装通用组件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#封装通用组件","aria-hidden":"true"}},[t._v("#")]),t._v(" 封装通用组件")]),t._v(" "),e("h3",{attrs:{id:"主要思想"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#主要思想","aria-hidden":"true"}},[t._v("#")]),t._v(" 主要思想")]),t._v(" "),e("p",[t._v("封装组件的思想主要是将前端页面/业务逻辑等按模块方式进行抽离，复杂的页面布局/逻辑等放入独立写的模块内部，使用详情组件只需要传入组件定义的数据/方法/chidlren等就可以完成相应功能开发。")]),t._v(" "),e("p",[t._v("封装组件主要分三类：")]),t._v(" "),e("ol",[e("li",[t._v("普通展示型组件(函数式组件)")]),t._v(" "),e("li",[t._v("纯逻型组件(容器组件)")]),t._v(" "),e("li",[t._v("通用业务组件(以基础组件/第三方组件为基础+一定的业务逻辑)")])]),t._v(" "),e("h3",{attrs:{id:"封装普通展示型组件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#封装普通展示型组件","aria-hidden":"true"}},[t._v("#")]),t._v(" 封装普通展示型组件")]),t._v(" "),e("p",[t._v("通过函数式组件实现，比较轻量，不带组件的生命周期，不带内部state，后期也可以通过React Hooks添加内部状态数据的控制")]),t._v(" "),e("h3",{attrs:{id:"封装纯逻型组件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#封装纯逻型组件","aria-hidden":"true"}},[t._v("#")]),t._v(" 封装纯逻型组件")]),t._v(" "),e("p",[t._v("通过组件的生命周期(通常是componentDidMount)来做权限判断；或是类似connect高阶函数(高阶组件)的形式，给传入的组件加上一些附加属性或逻辑操作或props")]),t._v(" "),e("h3",{attrs:{id:"封装通用业务组件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#封装通用业务组件","aria-hidden":"true"}},[t._v("#")]),t._v(" 封装通用业务组件")]),t._v(" "),e("p",[t._v("上面两种组件的综合封装，组件本身可独立完成一个通用的业务逻辑")]),t._v(" "),e("h3",{attrs:{id:"一个通用业务组件封装示例"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#一个通用业务组件封装示例","aria-hidden":"true"}},[t._v("#")]),t._v(" 一个通用业务组件封装示例")]),t._v(" "),e("p",[e("img",{attrs:{src:r(168),alt:"产品卡片"}})])])}],s=r(0),i=Object(s.a)({},function(){var t=this.$createElement;this._self._c;return this._m(0)},e,!1,null,null,null);a.default=i.exports}}]);