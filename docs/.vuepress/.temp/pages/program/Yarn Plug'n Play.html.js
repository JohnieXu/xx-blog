export const data = JSON.parse("{\"key\":\"v-02a951f2\",\"path\":\"/program/Yarn%20Plug'n%20Play.html\",\"title\":\"Yarn 的 Plug'n'Play 特性\",\"lang\":\"en-US\",\"frontmatter\":{\"title\":\"Yarn 的 Plug'n'Play 特性\",\"created\":\"2020/05/03\",\"updated\":\"2020/05/03\",\"category\":[\"工具笔记\",\"前端工具\"],\"tag\":[\"yarn\",\"前端工具\"],\"description\":\"前言 今天在看 ts-loader 的功能特性时看到其支持 Yarn Plug'n'Play。 于是花了一些时间了解了一下它的工作原理以及解决的问题并整理出了本篇文章。 现状与痛点 Yarn 团队开发 PnP 特性最直接的原因就是现有的依赖管理方式效率太低。引用依赖时慢，安装依赖时也慢。\",\"head\":[[\"meta\",{\"property\":\"og:url\",\"content\":\"https://johniexu.github.io/xx-blog/program/Yarn%20Plug'n%20Play.html\"}],[\"meta\",{\"property\":\"og:site_name\",\"content\":\"迪诺笔记\"}],[\"meta\",{\"property\":\"og:title\",\"content\":\"Yarn 的 Plug'n'Play 特性\"}],[\"meta\",{\"property\":\"og:description\",\"content\":\"前言 今天在看 ts-loader 的功能特性时看到其支持 Yarn Plug'n'Play。 于是花了一些时间了解了一下它的工作原理以及解决的问题并整理出了本篇文章。 现状与痛点 Yarn 团队开发 PnP 特性最直接的原因就是现有的依赖管理方式效率太低。引用依赖时慢，安装依赖时也慢。\"}],[\"meta\",{\"property\":\"og:type\",\"content\":\"article\"}],[\"meta\",{\"property\":\"og:locale\",\"content\":\"en-US\"}],[\"meta\",{\"property\":\"article:tag\",\"content\":\"yarn\"}],[\"meta\",{\"property\":\"article:tag\",\"content\":\"前端工具\"}],[\"script\",{\"type\":\"application/ld+json\"},\"{\\\"@context\\\":\\\"https://schema.org\\\",\\\"@type\\\":\\\"Article\\\",\\\"headline\\\":\\\"Yarn 的 Plug'n'Play 特性\\\",\\\"image\\\":[\\\"\\\"],\\\"dateModified\\\":null,\\\"author\\\":[]}\"]]},\"headers\":[{\"level\":2,\"title\":\"前言\",\"slug\":\"前言\",\"link\":\"#前言\",\"children\":[]},{\"level\":2,\"title\":\"现状与痛点\",\"slug\":\"现状与痛点\",\"link\":\"#现状与痛点\",\"children\":[]},{\"level\":2,\"title\":\"实现方案\",\"slug\":\"实现方案\",\"link\":\"#实现方案\",\"children\":[]},{\"level\":2,\"title\":\"带来了哪些好处\",\"slug\":\"带来了哪些好处\",\"link\":\"#带来了哪些好处\",\"children\":[]},{\"level\":2,\"title\":\"注意事项\",\"slug\":\"注意事项\",\"link\":\"#注意事项\",\"children\":[]},{\"level\":2,\"title\":\"在项目中调试依赖\",\"slug\":\"在项目中调试依赖\",\"link\":\"#在项目中调试依赖\",\"children\":[]},{\"level\":2,\"title\":\"总结\",\"slug\":\"总结\",\"link\":\"#总结\",\"children\":[]}],\"readingTime\":{\"minutes\":4.95,\"words\":1486},\"filePathRelative\":\"program/Yarn Plug'n Play.md\",\"excerpt\":\"<h2> 前言</h2>\\n<p>今天在看 <code>ts-loader</code> 的功能特性时看到其支持 <a href=\\\"https://github.com/TypeStrong/ts-loader#yarn-plugnplay\\\" target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\">Yarn Plug'n'Play</a>。 于是花了一些时间了解了一下它的工作原理以及解决的问题并整理出了本篇文章。</p>\\n<h2> 现状与痛点</h2>\\n<p>Yarn 团队开发 PnP 特性最直接的原因就是现有的依赖管理方式效率太低。引用依赖时慢，安装依赖时也慢。</p>\",\"autoDesc\":true}")

if (import.meta.webpackHot) {
  import.meta.webpackHot.accept()
  if (__VUE_HMR_RUNTIME__.updatePageData) {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  }
}

if (import.meta.hot) {
  import.meta.hot.accept(({ data }) => {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  })
}
