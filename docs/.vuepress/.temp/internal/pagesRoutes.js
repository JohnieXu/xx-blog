export const pagesRoutes = [
  ["v-8daa1a0e","/",{"y":"h","t":"首页"},["/README.md"]],
  ["v-768efd00","/go/GO%E7%AC%94%E8%AE%B0-%E9%94%99%E8%AF%AF%E6%8D%95%E8%8E%B7.html",{"d":1586357571000,"c":["GO"],"g":["学习笔记"],"e":"<h2> 常规用法</h2>\n<div class=\"hint-container tip\">\n<p class=\"hint-container-title\">Tips</p>\n<p>采用panic抛出错误使得进程即将结束，defer注册在panic发生时要指定的逻辑，内置recover函数来捕获错误栈顶的错误；recover捕获过的错误后续的逻辑将在defer逻辑执行完成之后恢复执行。</p>\n</div>\n","r":{"minutes":1.2,"words":361},"y":"a","t":"【GO学习笔记】错误捕获"},["/go/GO笔记-错误捕获.html","/go/GO笔记-错误捕获.md",":md"]],
  ["v-2d0a8eae","/go/",{"d":1586357571000,"e":"<h2> 基本用法</h2>\n<p><a href=\"/xx-blog/go/GO%E7%AC%94%E8%AE%B0-%E9%94%99%E8%AF%AF%E6%8D%95%E8%8E%B7.html\" target=\"blank\">GO笔记-错误捕获</a></p>\n","r":{"minutes":0.09,"words":27},"y":"a","t":"GO学习笔记"},["/go/README.md"]],
  ["v-1fcdcab9","/articles/",{"d":1525023118000,"e":"<h1> 目录</h1>\n<h2> title1</h2>\n<p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Consequatur enim ratione impedit suscipit atque deleniti maxime voluptatibus repellendus ad quaerat quas alias, odio eius molestiae quis, eligendi corrupti illo error.</p>\n<h2> title2</h2>\n<p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Voluptatem autem asperiores sed perferendis, nulla dignissimos nobis incidunt voluptate quaerat assumenda numquam ipsa, distinctio quo possimus atque soluta. Aliquid, dolorem minima.</p>","r":{"minutes":0.22,"words":66},"y":"a","t":"目录"},["/articles/README.md"]],
  ["v-4d2a090a","/practice/",{"d":1586357571000,"e":"<h2> VuePress搭建支持PWA的博客</h2>\n<div class=\"hint-container tip\">\n<p class=\"hint-container-title\">Tips</p>\n<p>本项目是个人独立开发的个人博客项目，已经上线<a href=\"https://johniexu.github.io\" target=\"_blank\" rel=\"noopener noreferrer\">迪诺笔记</a></p>\n</div>\n<p align=\"center\">桌面端预览</p>\n<p align=\"center\" style=\"box-shadow: 0 0 5px rgba(200,200,200,0.5);\">\n  <img src=\"https://tva1.sinaimg.cn/large/00831rSTly1gcgunux3fyj31gd0u0aek.jpg\" width=\"600\">\n</p>","r":{"minutes":0.44,"words":131},"y":"a","t":"实战分享——文章导航"},["/practice/README.md"]],
  ["v-98f611de","/practice/Vuepress-builds-PWA-blog.html",{"d":1586357571000,"e":"<h2> 配置PWA要点</h2>\n<div class=\"language-json line-numbers-mode\" data-ext=\"json\"><pre class=\"language-json\"><code><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"迪诺笔记\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"short_name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"JohnieXu's Blog\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"start_url\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\".\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"display\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"standalone\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"background_color\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"#fff\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"description\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"哪里会有人喜欢孤独，不过是不喜欢失望罢了。 ——村上春树\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"icons\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"src\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"logo_48.png\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"sizes\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"48x48\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"image/png\"</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"src\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"logo_72.png\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"sizes\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"72x72\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"image/png\"</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"src\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"logo_96.png\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"sizes\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"96x96\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"image/png\"</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"src\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"logo_144.png\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"sizes\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"144x144\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"image/png\"</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"src\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"logo_168.png\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"sizes\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"168x168\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"image/png\"</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"src\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"logo_192.png\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"sizes\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"192x192\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"image/png\"</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"related_applications\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"platform\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"play\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"url\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"https://play.google.com/store/apps/details?id=cheeaun.hackerweb\"</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span>\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>","r":{"minutes":0.43,"words":129},"y":"a","t":"VuePress搭建支持PWA的博客"},[":md"]],
  ["v-782a4b38","/program/A-comprehensive-analysis-and-summary-of-BFC-principle-and-Practice.html",{"d":1586357571000,"c":["文章专栏","硬核前端"],"g":["前端核心","前端进阶"],"e":"<h2> 前言</h2>\n<p>经常在面试中被问到“如何清除浮动？”、“为什么 <code>overflow: hidden</code>&nbsp;可以清除浮动？”等等比较基础的问题。虽然这些题目案在各种写面试题的文章中都有提供答案，但这种教科书式的问答肯定不是我们的目的，与其记住答案不如彻底掌握其核心原理——<strong>块级格式化上下文（BFC）</strong>。</p>\n<p>这篇文章主要就是彻底分析清楚BFC原理、总结BFC经典场景中的用法，最后在实践中总结BFC在H5、小程序开发中的应用。</p>\n<blockquote>\n<p>本文首发自<a href=\"https://johniexu.github.io/\" target=\"_blank\" rel=\"noopener noreferrer\">JohnieXu's Blog</a>，转载请注明出处😁</p>\n</blockquote>\n<h2> 一、BFC作用</h2>\n<ul>\n<li><strong>清除浮动</strong>：BFC会包含创建它的元素内部的所有内容（包含浮动元素）</li>\n<li><strong>外边距折叠</strong>：解决同一BFC容器中的相邻元素间的外边距折叠问题</li>\n<li><strong>左图右文布局</strong>：利用浮动元产生BFC以及BFC之间不会互相覆盖实现左图右文布局</li>\n</ul>\n","r":{"minutes":8.34,"words":2502},"y":"a","t":"全面分析总结BFC原理及实践"},[":md"]],
  ["v-4e683551","/program/FE-file-upload.html",{"d":1586357571000,"g":["前端进阶"],"e":"<h2> 0.图片上传思路</h2>\n<blockquote>\n<ol>\n<li>监听一个input(type=‘file’)的onchange事件，这样获取到文件file；</li>\n<li>将file转成dataUrl;</li>\n<li>然后根据dataUrl利用canvas绘制图片压缩，然后再转成新的dataUrl；</li>\n<li>再把dataUrl转成Blob；</li>\n<li>把Blob append进FormData中；</li>\n<li>xhr实现上传。</li>\n</ol>\n</blockquote>\n<h2> 1.基于H5的File API和input实现</h2>\n","r":{"minutes":12.42,"words":3725},"y":"a","t":"前端文件上传总结"},[":md"]],
  ["v-e8953d40","/program/Take-you-to-analyze-the-source-code-of-Vue-router.html",{"d":1586357571000,"c":["文章专栏","硬核前端"],"g":["前端进阶","源码分析"],"e":"<h1> 前言</h1>\n<p>在<a href=\"https://www.yuque.com/johniexu/frontend/dhgooo\" target=\"_blank\" rel=\"noopener noreferrer\">前一篇文章</a>中遇到的vue路由组件缓存问题已经解决并对项目进行了适当的优化改进，但是并未开探寻究vue-router的源码，这篇就继续上次的话题，深入分析vue-router源码中对导航守卫、动态参数匹配、过渡效果和异步组件等的实现。</p>\n<blockquote>\n<p>本文分析的源码为vue-router@3.1.3，vue@2.6.11</p>\n</blockquote>\n","r":{"minutes":16.01,"words":4804},"y":"a","t":"带你全面分析vue-router源码（万字长文）"},[":md"]],
  ["v-0fb1418e","/program/Talk-about-the-pit-encountered-in-the-implementation-of-Vue-routing-component-cache.html",{"d":1586357571000,"c":["文章专栏","硬核前端"],"g":["前端进阶"],"e":"<h2> 背景介绍</h2>\n<p>最近在做公司后台管理系统项目时遇到一个比较怪异的bug——采用<code>keep-alive+vue-router</code>实现的路由缓存遇到<strong>缓存不生效</strong>的情况。</p>\n","r":{"minutes":5.1,"words":1530},"y":"a","t":"聊一聊实现Vue路由组件缓存遇到的’坑‘"},[":md"]],
  ["v-767bdf0f","/program/Thoroughly-understand-DOM-event-mechanism.html",{"d":1586357571000,"c":["文章专栏","硬核前端"],"g":["前端核心","前端进阶"],"e":"<h2> 前言</h2>\n<p>在网页端、移动端H5、小程序等各个终端环境的前端开发中随处可见事件的运用，可见事件机制的是前端这一块的重中之重。经过我研读了大量博客文章以及开源框架源码后，这次算是对DOM事件机制有了更新更全面的的认识。</p>\n<p>下文主要通过一个例子带你<strong>分析DOM事件的传递、事件处理</strong>，然后在此基础上再<strong>深入总结对事件监听的优化方案</strong>，最终总结下DOM事件机制<strong>在开源框架中的实战应用</strong>。</p>\n<blockquote>\n<p>本文首发自<a href=\"https://johniexu.github.io/\" target=\"_blank\" rel=\"noopener noreferrer\">JohnieXu's Blog</a>，转载请注明出处😁</p>\n</blockquote>\n","r":{"minutes":8.34,"words":2502},"y":"a","t":"这次一定彻底弄懂DOM事件机制"},[":md"]],
  ["v-02a951f2","/program/Yarn%20Plug'n%20Play.html",{"d":1588503723000,"c":["工具笔记","前端工具"],"g":["yarn","前端工具"],"e":"<h2> 前言</h2>\n<p>今天在看 <code>ts-loader</code> 的功能特性时看到其支持 <a href=\"https://github.com/TypeStrong/ts-loader#yarn-plugnplay\" target=\"_blank\" rel=\"noopener noreferrer\">Yarn Plug'n'Play</a>。 于是花了一些时间了解了一下它的工作原理以及解决的问题并整理出了本篇文章。</p>\n<h2> 现状与痛点</h2>\n<p>Yarn 团队开发 PnP 特性最直接的原因就是现有的依赖管理方式效率太低。引用依赖时慢，安装依赖时也慢。</p>","r":{"minutes":4.95,"words":1486},"y":"a","t":"Yarn 的 Plug'n'Play 特性"},["/program/Yarn Plug'n Play.html","/program/Yarn Plug'n Play.md",":md"]],
  ["v-3e4a50f9","/program/deep-understanding-of-JS-module.html",{"d":1586357571000,"g":["前端进阶"],"e":"<h2> 引言</h2>\n<p><code>JavaScript</code>的模块机制其实是借鉴的其他程序设计语言的, 如Java中package的概念, <code>import java.util.ArrayList;</code>; package就是逻辑上相关的代码组织到同一个包内，包内是一个相对独立的作用域，不用担心命名冲突等等, 当需要在外部使用的时候直接import相应的package即可。</p>\n<p>由于<code>JavaScript</code>在设计之初的定位原因, 并没有提供类似模块的功能, 随后便出现了各种<strong>模拟</strong>类似功能的规范。到今天(2018-5-28)ES6已经十分普及, ES6的模块机制已经大规模使用, 我们完全可以使用ES6提供的模块化规范(机制)。</p>","r":{"minutes":7.29,"words":2187},"y":"a","t":"深入理解JS模块"},[":md"]],
  ["v-466f2678","/program/deep-understanding-of-JS-prototype-and-inheritance.html",{"d":1587956207000,"c":["文章专栏","硬核前端"],"g":["前端核心","前端进阶"],"e":"<h2> 前言</h2>\n<p>最近在整体地复习一遍现代前端必备的核心知识点，将会整理成一个前端分析总结文章系列。这篇是其中的第三篇，主要是总结下JS中原型与继承等核心知识点。（另外，此系列文章也可以在语雀专栏——<a href=\"https://www.yuque.com/johniexu/frontend\" target=\"_blank\" rel=\"noopener noreferrer\">硬核前端系列</a>查看）。</p>\n<blockquote>\n<p>本文首发自<a href=\"https://johniexu.github.io/\" target=\"_blank\" rel=\"noopener noreferrer\">迪诺笔记</a>，转载请注明出处😁</p>\n</blockquote>","r":{"minutes":10.52,"words":3157},"y":"a","t":"深入理解JS原型与继承"},[":md"]],
  ["v-b0877d50","/program/deep-understanding-of-es6-module.html",{"d":1586357571000,"g":["前端进阶"],"e":"<h2> ES6模块与前ES6模块概念区别</h2>\n<ul>\n<li>\n<p>ES6基于文件的模块</p>\n<p>即一个文件一个模块，在浏览器 web 环境中需要分别加载各个单独的文件模块，而非将其放入一个大的单独文件加载，当然现阶段对于ES6的模块都是采用 babel 进行 transpile 然后打包成若干个<a href=\"http://www.lessing.online/xx-blog/articles/FE/deep-understanding-of-JS-module.html#umd\" target=\"_blank\" rel=\"noopener noreferrer\">UMD模块</a>。对于考虑是采用单独小文件还是打包后的若干个较大文件，主要是考虑到 HTTP/1.1 高效并发/交替加载多个小文件的性能问题。</p>\n</li>\n</ul>\n","r":{"minutes":2.95,"words":884},"y":"a","t":"ES6模块的核心知识点"},[":md"]],
  ["v-445c2c6f","/program/frontend-interview.html",{"d":1586357571000,"g":["未分类"],"e":"<h2> less</h2>\n<blockquote>\n<p>是一个css预处理语言，和sass类似，支持函数/变量/模块，不同于poastcss（其不是一个预处理语言，通过各种插件来支持less/sass和autoprefixer等）</p>\n</blockquote>\n<p><strong>变量</strong></p>\n<p>以<code>@</code>开头，类似js中的变量，可以用作css值或者属性</p>\n<div class=\"language-less line-numbers-mode\" data-ext=\"less\"><pre class=\"language-less\"><code><span class=\"token comment\">// 值</span>\n<span class=\"token variable\">@link-color<span class=\"token punctuation\">:</span></span>    #428bca<span class=\"token punctuation\">;</span>\n<span class=\"token variable\">@link-color-hover<span class=\"token punctuation\">:</span></span>  <span class=\"token function\">darken</span><span class=\"token punctuation\">(</span><span class=\"token variable\">@link-color</span><span class=\"token punctuation\">,</span> 10%<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// css属性</span>\n<span class=\"token variable\">@my-selector<span class=\"token punctuation\">:</span></span> banner<span class=\"token punctuation\">;</span>\n<span class=\"token selector\">.@{my-selector}</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">font-weight</span><span class=\"token punctuation\">:</span> bold<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">line-height</span><span class=\"token punctuation\">:</span> 40px<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">margin</span><span class=\"token punctuation\">:</span> 0 auto<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>","r":{"minutes":15.75,"words":4724},"y":"a","t":"frontend-interview"},[":md"]],
  ["v-9db53098","/program/key-concepts-of-react-and-dva.html",{"d":1586357571000,"g":["未分类"],"e":"<h2> React</h2>\n<h3> 环境搭建</h3>\n<ol>\n<li>Node.js</li>\n<li>创建项目<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><pre class=\"language-bash\"><code>npx create-react-app react-demo\n<span class=\"token builtin class-name\">cd</span> react-demo\n<span class=\"token function\">npm</span> start\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div></li>\n</ol>","r":{"minutes":3.55,"words":1065},"y":"a","t":"Ract和Dva的一些核心概念"},[":md"]],
  ["v-340fdd96","/program/lazyload-pullup-load.html",{"d":1586357571000,"g":["未分类"],"e":"<p>懒加载\n图片懒加载 路由懒加载\n上拉加载(分页加载)</p>\n<p><a href=\"https://www.cnblogs.com/xing901022/p/5052780.html\" target=\"_blank\" rel=\"noopener noreferrer\">https://www.cnblogs.com/xing901022/p/5052780.html</a></p>\n","r":{"minutes":0.13,"words":39},"y":"a","t":"上拉懒加载"},[":md"]],
  ["v-4591f22e","/program/prototype-of-JS.html",{"d":1586357571000,"c":["硬核前端"],"g":["前端核心","前端进阶"],"e":"<h2> 前言</h2>\n<p>思考以下几个问题：</p>\n<ol>\n<li>原型链是什么概念， JS 中为何要引入原型链？</li>\n<li>原型链是怎样实现继承的？</li>\n<li>构造函数 constructor，<strong>proto</strong>，ES6 中 class、static、super 和原型链的关系？</li>\n<li>如何利用原型链来解释 this 的指向问题？</li>\n<li>原型链与区块链？</li>\n</ol>\n<p>看下面这段代码的打印结果</p>\n<div class=\"language-javascript line-numbers-mode\" data-ext=\"js\"><pre class=\"language-javascript\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">Foo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\nFoo<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">getName</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">Foo</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">getName</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"2\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">new</span> <span class=\"token class-name\">Foo<span class=\"token punctuation\">.</span>getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// -&gt; 1   等价于new (Foo.getName()) 调用的是构造函数Foo本身的getName方法</span>\n<span class=\"token keyword\">new</span> <span class=\"token class-name\">Foo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// -&gt; 2   等价于(new Foo()).getName() 调用的是实例上(原型上)的getName方法</span>\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>","r":{"minutes":2.38,"words":714},"y":"a","t":"JS原型链"},[":md"]],
  ["v-706d7867","/program/react-component-encapsulation.html",{"d":1586357571000,"g":["前端进阶"],"e":"<h2> 封装通用组件</h2>\n<h3> 主要思想</h3>\n<p>封装组件的思想主要是将前端页面/业务逻辑等按模块方式进行抽离，复杂的页面布局/逻辑等放入独立写的模块内部，使用详情组件只需要传入组件定义的数据/方法/chidlren等就可以完成相应功能开发。</p>\n<p>封装组件主要分三类：</p>\n<ol>\n<li>普通展示型组件(函数式组件)</li>\n<li>纯逻型组件(容器组件)</li>\n<li>通用业务组件(以基础组件/第三方组件为基础+一定的业务逻辑)</li>\n</ol>\n<h3> 封装普通展示型组件</h3>\n<p>通过函数式组件实现，比较轻量，不带组件的生命周期，不带内部state，后期也可以通过React Hooks添加内部状态数据的控制</p>","r":{"minutes":1.16,"words":347},"y":"a","t":"React封装通用组件"},[":md"]],
  ["v-00e276a8","/program/react-quill-in-react.html",{"d":1586357571000,"g":["前端进阶"],"e":"<blockquote>\n<p><a href=\"https://github.com/JohnieXu/react-quill-demo\" target=\"_blank\" rel=\"noopener noreferrer\">demo</a></p>\n</blockquote>\n","r":{"minutes":0.07,"words":20},"y":"a","t":"React中使用Quill.js"},[":md"]],
  ["v-09a7986e","/program/regular-directives-of-Git.html",{"d":1586357571000,"c":["工具笔记","前端工具"],"g":["git","前端工具"],"e":"<h2> 全文目录速览</h2>\n\n<hr>\n<h2> 一、配置命令</h2>\n<h3> 配置用户名和邮箱</h3>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><pre class=\"language-bash\"><code><span class=\"token function\">git</span> config <span class=\"token parameter variable\">--global</span> user.name <span class=\"token string\">\"JohnieXu\"</span> // 配置全局用户名为JohnieXu\n<span class=\"token function\">git</span> config <span class=\"token parameter variable\">--global</span> user.email <span class=\"token string\">\"281910378@qq.com\"</span> // 配置全局邮箱为281910378@qq.com\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h3> 查看配置</h3>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><pre class=\"language-bash\"><code><span class=\"token function\">git</span> config <span class=\"token parameter variable\">-l</span> // 查看git全局配置信息\nor\n<span class=\"token function\">git</span> config <span class=\"token parameter variable\">--list</span>\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>","r":{"minutes":21.67,"words":6500},"y":"a","t":"Git常用命令整理"},[":md"]],
  ["v-3528ce46","/program/tmp.html",{"d":1588819987000,"e":"<h2> target 配置</h2>\n<p>指定编译后 js 代码所采用的规范，如：用 es5、es6 等</p>\n<h2> lib 配置</h2>\n<p>指定当前代码中可以用到的 es6+ 等规范中的新语法特性，当业务代码中使用了 lib 中未指定的语法特性时将报编译错误，像 Symbol 等特性对浏览器平台的兼容性处理需要引入 core-js 等第三方库来 polyfill。</p>\n<h3> 例子</h3>\n<div class=\"language-json line-numbers-mode\" data-ext=\"json\"><pre class=\"language-json\"><code><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"compileOptions\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"target\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"es5\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"lib\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"dom\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"es2017\"</span><span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>","r":{"minutes":0.61,"words":183},"y":"a","t":"对于 typescript 中 target 与 lib 配置项的理解"},[":md"]],
  ["v-6525cd15","/program/video.js-in-react.html",{"d":1586357571000,"g":["未分类"],"e":"<h2> 0-Intro</h2>\n<blockquote>\n<p>在 React 项目中使用 video.js，实现 HTML5 视频播放器的自定制。</p>\n</blockquote>\n<p><strong>关于 <a href=\"http://videojs.com/\" target=\"_blank\" rel=\"noopener noreferrer\">video.js</a>：</strong></p>\n<p>引用官方的自我介绍：</p>\n<blockquote>\n<p>video.js is a free and open source HTML5 video player.</p>\n</blockquote>","r":{"minutes":13.06,"words":3917},"y":"a","t":"React中使用Video.js"},[":md"]],
  ["v-17110fd2","/summary/2020.11.15.html",{"d":1605450531000,"c":["个人总结"],"n":true,"r":{"minutes":5.72,"words":1715},"y":"a","t":"2020 年 11 月上半月总结"},[":md"]],
  ["v-0d3b0ef3","/articles/BE/",{"d":1525023118000,"e":"<h1> 目录</h1>\n<h2> title1</h2>\n<p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Consequatur enim ratione impedit suscipit atque deleniti maxime voluptatibus repellendus ad quaerat quas alias, odio eius molestiae quis, eligendi corrupti illo error.</p>\n<h2> title2</h2>\n<p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Voluptatem autem asperiores sed perferendis, nulla dignissimos nobis incidunt voluptate quaerat assumenda numquam ipsa, distinctio quo possimus atque soluta. Aliquid, dolorem minima.</p>","r":{"minutes":0.22,"words":66},"y":"a","t":"目录"},["/articles/BE/README.md"]],
  ["v-32ecd860","/articles/BE/web-service-deployment.html",{"d":1555728485000,"e":"<h1> 服务部署</h1>\n<h2> 阿里云服务</h2>\n<ol>\n<li>操作系统 ubuntu 16.04</li>\n<li>安装docker</li>\n<li>安装nvm</li>\n<li>安装node</li>\n<li>执行docker-compose文件，初始化部署环境</li>\n</ol>\n<h2> linux常用命令</h2>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:right\">命令</th>\n<th style=\"text-align:left\">作用</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:right\">sudo</td>\n<td style=\"text-align:left\">提升权限</td>\n</tr>\n<tr>\n<td style=\"text-align:right\">sudo ln -s 源目录 映射文件名</td>\n<td style=\"text-align:left\">创建软连接</td>\n</tr>\n<tr>\n<td style=\"text-align:right\">sudo vim</td>\n<td style=\"text-align:left\">vim编辑器</td>\n</tr>\n<tr>\n<td style=\"text-align:right\">/关键字</td>\n<td style=\"text-align:left\">vim中的查询</td>\n</tr>\n<tr>\n<td style=\"text-align:right\">n</td>\n<td style=\"text-align:left\">vim中的查询下一个</td>\n</tr>\n<tr>\n<td style=\"text-align:right\">i</td>\n<td style=\"text-align:left\">vim中的插入</td>\n</tr>\n<tr>\n<td style=\"text-align:right\">A</td>\n<td style=\"text-align:left\">vim中的行尾追加</td>\n</tr>\n<tr>\n<td style=\"text-align:right\">dd</td>\n<td style=\"text-align:left\">vim中的删除整行</td>\n</tr>\n<tr>\n<td style=\"text-align:right\">yy</td>\n<td style=\"text-align:left\">vim中的拷贝整行</td>\n</tr>\n<tr>\n<td style=\"text-align:right\">p</td>\n<td style=\"text-align:left\">vim中的粘贴</td>\n</tr>\n<tr>\n<td style=\"text-align:right\">esc :w</td>\n<td style=\"text-align:left\">vim中的保存</td>\n</tr>\n<tr>\n<td style=\"text-align:right\">esc :wq</td>\n<td style=\"text-align:left\">vim中的保存退出</td>\n</tr>\n<tr>\n<td style=\"text-align:right\">esc :q!</td>\n<td style=\"text-align:left\">vim中的退出不保存</td>\n</tr>\n</tbody>\n</table>","r":{"minutes":1.1,"words":329},"y":"a","t":"服务部署"},[":md"]],
  ["v-0d3b56c2","/articles/UI/",{"d":1584203479000,"e":"<h2> 基本用法</h2>\n<p><a href=\"/xx-blog/articles/UI/miniprogram-design-pattern.html\" target=\"blank\">小程序UI设计学习笔记「一」</a></p>\n","r":{"minutes":0.09,"words":26},"y":"a","t":"UI学习笔记"},["/articles/UI/README.md"]],
  ["v-d63f6f14","/articles/UI/miniprogram-design-pattern.html",{"d":1583548636000,"c":["UI设计"],"g":["学习笔记"],"e":"<h2> 界面说明</h2>\n<p><img src=\"https://tva1.sinaimg.cn/large/00831rSTly1gcthrlm7xij30ua0u0jsb.jpg\" alt=\"\"></p>\n","r":{"minutes":0.2,"words":60},"y":"a","t":"小程序UI设计学习笔记「一」"},[":md"]],
  ["v-3706649a","/404.html",{"y":"p","t":""},[]],
  ["v-ca04c7b8","/program/",{"y":"p","t":"Program"},[]],
  ["v-6e373742","/summary/",{"y":"p","t":"Summary"},[]],
  ["v-5bc93818","/category/",{"y":"p","t":"Category","I":0},[]],
  ["v-744d024e","/tag/",{"y":"p","t":"Tag","I":0},[]],
  ["v-e52c881c","/article/",{"y":"p","t":"Articles","I":0},[]],
  ["v-154dc4c4","/star/",{"y":"p","t":"Star","I":0},[]],
  ["v-01560935","/timeline/",{"y":"p","t":"Timeline","I":0},[]],
  ["v-3d18412f","/category/go/",{"y":"p","t":"GO Category","I":0},[]],
  ["v-2ba7b1aa","/tag/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/",{"y":"p","t":"Tag: 学习笔记","I":0},["/tag/学习笔记/"]],
  ["v-fa657266","/category/%E6%96%87%E7%AB%A0%E4%B8%93%E6%A0%8F/",{"y":"p","t":"文章专栏 Category","I":0},["/category/文章专栏/"]],
  ["v-0563db52","/tag/%E5%89%8D%E7%AB%AF%E6%A0%B8%E5%BF%83/",{"y":"p","t":"Tag: 前端核心","I":0},["/tag/前端核心/"]],
  ["v-29e7a4e8","/category/%E7%A1%AC%E6%A0%B8%E5%89%8D%E7%AB%AF/",{"y":"p","t":"硬核前端 Category","I":0},["/category/硬核前端/"]],
  ["v-7ca0aa35","/tag/%E5%89%8D%E7%AB%AF%E8%BF%9B%E9%98%B6/",{"y":"p","t":"Tag: 前端进阶","I":0},["/tag/前端进阶/"]],
  ["v-3465f6cc","/category/%E5%B7%A5%E5%85%B7%E7%AC%94%E8%AE%B0/",{"y":"p","t":"工具笔记 Category","I":0},["/category/工具笔记/"]],
  ["v-24ac4f60","/tag/%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/",{"y":"p","t":"Tag: 源码分析","I":0},["/tag/源码分析/"]],
  ["v-d25df5fa","/category/%E5%89%8D%E7%AB%AF%E5%B7%A5%E5%85%B7/",{"y":"p","t":"前端工具 Category","I":0},["/category/前端工具/"]],
  ["v-29752bdd","/tag/yarn/",{"y":"p","t":"Tag: yarn","I":0},[]],
  ["v-68eb46ee","/category/%E4%B8%AA%E4%BA%BA%E6%80%BB%E7%BB%93/",{"y":"p","t":"个人总结 Category","I":0},["/category/个人总结/"]],
  ["v-5b30848d","/tag/%E5%89%8D%E7%AB%AF%E5%B7%A5%E5%85%B7/",{"y":"p","t":"Tag: 前端工具","I":0},["/tag/前端工具/"]],
  ["v-022a1014","/category/ui%E8%AE%BE%E8%AE%A1/",{"y":"p","t":"UI设计 Category","I":0},["/category/ui设计/"]],
  ["v-723f717c","/tag/%E6%9C%AA%E5%88%86%E7%B1%BB/",{"y":"p","t":"Tag: 未分类","I":0},["/tag/未分类/"]],
  ["v-b310d42a","/tag/git/",{"y":"p","t":"Tag: git","I":0},[]],
]
